<?xml version='1.0'?>
<!DOCTYPE TemplateSet [
  <!ELEMENT TemplateSet (macro | template)* >
  <!ELEMENT macro (#PCDATA)>
  <!ATTLIST macro name ID #REQUIRED>
  <!ELEMENT template (#PCDATA)>
  <!ATTLIST template class CDATA #REQUIRED>
]>
<!-- This is SVG.tee, for GEF Diagrams to generate Scalar Vector Graphics -->
<!-- Markup Langauge files.  'tee' = Template with Embedded Expressions. -->

<TemplateSet>

<macro name='FILL_AND_STROKE'>
<![CDATA[
style='
fill:rgb(<ocl>self.fillColor.Red</ocl>,
		 <ocl>self.fillColor.Green</ocl>,
		 <ocl>self.fillColor.Blue</ocl>);
stroke-width:<ocl>self.lineWidth</ocl>;
stroke:rgb(<ocl>self.lineColor.Red</ocl>,
		   <ocl>self.lineColor.Green</ocl>,
		   <ocl>self.lineColor.Blue</ocl>);
']]>
</macro>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<macro name='STYLE_TEXT'>
<![CDATA[
style='
fill:rgb(<ocl>self.lineColor.Red</ocl>,
		 <ocl>self.lineColor.Green</ocl>,
		 <ocl>self.lineColor.Blue</ocl>);
stroke-width:<ocl>self.lineWidth</ocl>;
stroke:rgb(<ocl>self.fillColor.Red</ocl>,
		   <ocl>self.fillColor.Green</ocl>,
		   <ocl>self.fillColor.Blue</ocl>);
font:<ocl>self.fontFamily</ocl>;
font-size:<ocl>self.fontSize</ocl>
']]>
</macro>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<template class='uci.gef.Diagram'>
<![CDATA[
<?xml version='1.0'?>
<!DOCTYPE svg SYSTEM "svg-20000303-shared.dtd">
<svg description='<ocl>self.classAndModelID</ocl>'
      id='<ocl>self.name</ocl>'
>
  <ocl>self.layer.contentsNoEdges</ocl>
  <ocl>self.layer.contentsEdgesOnly</ocl>
</svg>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='java.awt.Rectangle'>
<![CDATA[
x='<ocl>self.x.intValue</ocl>'
y='<ocl>self.y.intValue</ocl>'
width='<ocl>self.width.intValue</ocl>'
height='<ocl>self.height.intValue</ocl>'
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='java.awt.Point'>
<![CDATA[
<ocl>self.x.intValue</ocl> 
<ocl>self.y.intValue</ocl>
]]>
</template>
<!-- luckily, points are only used in paths -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='java.awt.Color'>
<![CDATA[
rgb(
	<ocl>self.Red</ocl>, 
	<ocl>self.Green</ocl>, 
	<ocl>self.Blue</ocl>
)
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigRect'>
<![CDATA[
<rect
  id='<ocl>self.id</ocl>'
  <ocl>self.bounds</ocl>
  FILL_AND_STROKE
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigRRect'>
<![CDATA[
<rect
  id='<ocl>self.id</ocl>'
  <ocl>self.bounds</ocl>
  FILL_AND_STROKE
  rx='<ocl>self.cornerRadius</ocl>'
  ry='<ocl>self.cornerRadius</ocl>'
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigCircle'>
<![CDATA[
<ellipse
  id='<ocl>self.id</ocl>'
  FILL_AND_STROKE
  cx='<ocl>self.center.x.intValue</ocl>'
  cy='<ocl>self.center.y.intValue</ocl>'
  rx='<ocl>self.halfWidth.intValue</ocl>'
  ry='<ocl>self.halfHeight.intValue</ocl>'
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigText'>
<![CDATA[
<text
  id='<ocl>self.id</ocl>'
  x='<ocl>self.x.intValue</ocl>'
  y='<ocl>self.y.intValue</ocl>'
  transform="translate(<ocl>self.fontSize</ocl>,
					   <ocl>self.fontSize</ocl>)"
  STYLE_TEXT
><ocl>self.text</ocl></text>
]]>
</template>


<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigLine'>
<![CDATA[
<line
  id='<ocl>self.id</ocl>'
  description='<ocl>self.class.name</ocl>'
  FILL_AND_STROKE
  x1 = '<ocl>self.x1.intValue</ocl>'
  y1 = '<ocl>self.y1.intValue</ocl>'
  x2 = '<ocl>self.x2.intValue</ocl>'
  y2 = '<ocl>self.y2.intValue</ocl>'
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigPoly'>
<![CDATA[
<path
  id='<ocl>self.id</ocl>'
  description='<ocl>self.class.name</ocl>'
  FILL_AND_STROKE
  d = 'M
        <ocl>self.firstPoint.x.intValue</ocl>,
		<ocl>self.firstPoint.y.intValue</ocl>
       L 
	    <ocl>self.pointsVectorNotFirst</ocl>
	  '
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigSpline'>
<![CDATA[
<path
  id='<ocl>self.id</ocl>'
  description='<ocl>self.class.name</ocl>'
  FILL_AND_STROKE
  d = 'M 
		 <ocl>self.firstPoint.x.intValue</ocl> 
		 <ocl>self.firstPoint.y.intValue</ocl>
	   S 
		 <ocl>self.pointsVector</ocl>
	  '
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigInk'>
<![CDATA[
<path
  id='<ocl>self.id</ocl>'
  description='<ocl>self.class.name</ocl>'
  style='fill:none;
  stroke-width:<ocl>self.lineWidth</ocl>;
  stroke:rgb(<ocl>self.lineColor.Red</ocl>,
		     <ocl>self.lineColor.Green</ocl>,
		     <ocl>self.lineColor.Blue</ocl>);
  '
  d="M <ocl>self.firstPoint.x.intValue</ocl>,
       <ocl>self.firstPoint.y.intValue</ocl>
     L 
       <ocl>self.pointsVectorNotFirst</ocl>
    " 
/>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- image? -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigGroup'>
<![CDATA[
<g
   id='<ocl>self.id</ocl>'
   description='<ocl>self.classNameAndBounds</ocl>'
   href='<ocl>self.owner.id</ocl>'
   FILL_AND_STROKE
>
  <private>
    enclosingFig='<ocl>self.enclosingFig.id</ocl>'
  </private>
  
  <ocl>self.figs</ocl>
</g>
]]>
</template>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<template class='uci.gef.FigEdge'>
<![CDATA[
<g
   id='<ocl>self.id</ocl>'
   description='<ocl>self.class.name</ocl>'
   href='<ocl>self.owner.id</ocl>'
   FILL_AND_STROKE
>
  <private>
    sourcePortFig='<ocl>self.sourcePortFig.id</ocl>'
    destPortFig='<ocl>self.destPortFig.id</ocl>'
    sourceFigNode='<ocl>self.sourceFigNode.id</ocl>'
    destFigNode='<ocl>self.destFigNode.id</ocl>'
  </private>

  <ocl>self.fig</ocl>
</g>
]]>
</template>

</TemplateSet>
